(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{544:function(t,s,n){"use strict";n.r(s);var a=n(52),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"js中的原型和原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js中的原型和原型链"}},[t._v("#")]),t._v(" JS中的原型和原型链")]),t._v(" "),n("h4",{attrs:{id:"_1、所有的引用类型（数组、函数、对象）可以自由扩展属性（除null以外）。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、所有的引用类型（数组、函数、对象）可以自由扩展属性（除null以外）。"}},[t._v("#")]),t._v(" 1、所有的引用类型（数组、函数、对象）可以自由扩展属性（除null以外）。")]),t._v(" "),n("h4",{attrs:{id:"_2、所有的引用类型都有一个-proto-属性-也叫隐式原型，它是一个普通的对象-。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、所有的引用类型都有一个-proto-属性-也叫隐式原型，它是一个普通的对象-。"}},[t._v("#")]),t._v(" 2、所有的引用类型都有一个’_ _ proto_ _'属性(也叫隐式原型，它是一个普通的对象)。")]),t._v(" "),n("h4",{attrs:{id:"_3、所有的函数都有一个-prototype-属性-这也叫显式原型，它也是一个普通的对象-。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、所有的函数都有一个-prototype-属性-这也叫显式原型，它也是一个普通的对象-。"}},[t._v("#")]),t._v(" 3、所有的函数都有一个’prototype’属性(这也叫显式原型，它也是一个普通的对象)。")]),t._v(" "),n("h4",{attrs:{id:"_4、所有引用类型，它的-proto-属性指向它的构造函数的-prototype-属性。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、所有引用类型，它的-proto-属性指向它的构造函数的-prototype-属性。"}},[t._v("#")]),t._v(" 4、所有引用类型，它的’_ _ proto_ _'属性指向它的构造函数的’prototype’属性。")]),t._v(" "),n("h4",{attrs:{id:"_5、当试图得到一个对象的属性时，如果这个对象本身不存在这个属性，那么就会去它的-proto-属性-也就是它的构造函数的-prototype-属性-中去寻找。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、当试图得到一个对象的属性时，如果这个对象本身不存在这个属性，那么就会去它的-proto-属性-也就是它的构造函数的-prototype-属性-中去寻找。"}},[t._v("#")]),t._v(" 5、当试图得到一个对象的属性时，如果这个对象本身不存在这个属性，那么就会去它的’_ _ proto_ _'属性(也就是它的构造函数的’prototype’属性)中去寻找。")]),t._v(" "),n("p",[t._v("这是一个构造函数")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("根据要点3，所有的函数都有一个prototype属性，这个属性是一个对象\n再根据要点1，所有的对象可以自由扩展属性\n于是就有了以下写法")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prototype对象里面又有其他的属性")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showName")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I\'m "')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this是什么要看执行的时候谁调用了这个函数")]),t._v("\n\t\t    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showAge")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"And I\'m "')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this是什么要看执行的时候谁调用了这个函数")]),t._v("\n\t                  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小明'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当试图得到一个对象的属性时，如果这个对象本身不存在这个属性，那么就会去它")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数的'prototype'属性中去找")]),t._v("\nfn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("showName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//I'm 小明")]),t._v("\nfn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("showAge")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//And I'm 19")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("p",[t._v("这就是原型，很好理解。那为什么要使用原型呢？\n试想如果我们要通过Foo()来创建很多很多个对象，如果我们是这样子写的话：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showName")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I\'m "')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("showAge")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"And I\'m "')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("p",[t._v("那么我们创建出来的每一个对象，里面都有"),n("strong",[t._v("showName")]),t._v("和"),n("strong",[t._v("showAge")]),t._v("方法，这样就会占用很多的资源。\n而通过原型来实现的话，只需要在构造函数里面给属性赋值，而把方法写在"),n("strong",[t._v("Foo.prototype")]),t._v("属性(这个属性是唯一的)里面。这样每个对象都可以使用"),n("strong",[t._v("prototype")]),t._v("属性里面的"),n("strong",[t._v("showName")]),t._v("、"),n("strong",[t._v("showAge")]),t._v("方法，并且节省了不少的资源。")]),t._v(" "),n("p",[t._v("首先，"),n("strong",[t._v("fn")]),t._v("的构造函数是"),n("strong",[t._v("Foo()")]),t._v("。所以：\n"),n("strong",[t._v("fn._ _ proto _ _=== Foo.prototype")]),t._v("\n又因为"),n("strong",[t._v("Foo.prototype")]),t._v("是一个普通的对象，它的构造函数是Object，所以：\n"),n("strong",[t._v("Foo.prototype._ _ proto _ _=== Object.prototype")]),t._v("\n通过上面的代码，我们知道这个"),n("strong",[t._v("toString()"),n("strong",[t._v("方法是在")]),t._v("Object.prototype")]),t._v("里面的，当调用这个对象的本身并不存在的方法时，它会一层一层地往上去找，一直到null为止。")]),t._v(" "),n("p",[t._v("所以当"),n("strong",[t._v("fn")]),t._v("调用"),n("strong",[t._v("toString()"),n("strong",[t._v("时，"),n("strong",[t._v("JS")]),t._v("发现")]),t._v("fn")]),t._v("中没有这个方法，于是它就去"),n("strong",[t._v("Foo.prototype")]),t._v("中去找，发现还是没有这个方法，然后就去"),n("strong",[t._v("Object.prototype")]),t._v("中去找，找到了，就调用"),n("strong",[t._v("Object.prototype")]),t._v("中的toString()方法。")]),t._v(" "),n("p",[t._v("这就是原型链，"),n("strong",[t._v("fn")]),t._v("能够调用"),n("strong",[t._v("Object.prototype")]),t._v("中的方法正是因为存在原型链的机制。")]),t._v(" "),n("p",[t._v("(*另外，在使用原型的时候，一般推荐将需要扩展的方法写在构造函数的prototype属性中，避免写在_ _ proto _ _属性里面)。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://blog.xiexintao.top/qiniu_picGo/20210119113131.png",alt:"js原型链1"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://blog.xiexintao.top/qiniu_picGo/20210119113141.png",alt:"js原型链2"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://blog.xiexintao.top/qiniu_picGo/20210119113144.png",alt:"js原型链3"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://blog.xiexintao.top/qiniu_picGo/20210119113147.png",alt:"js原型链3"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://blog.xiexintao.top/qiniu_picGo/20210119113600.png",alt:"js原型链5"}})]),t._v(" "),n("br"),t._v(" "),n("br"),t._v(" "),n("hr"),t._v(" "),n("br"),t._v(" "),n("p",[t._v("我对原型链的理解")]),t._v(" "),n("p",[n("strong",[t._v("Foo")]),t._v("是一个普通的构造函数，它可以产生一个示例化的对象"),n("strong",[t._v("fn")])]),t._v(" "),n("p",[n("strong",[t._v("fn")]),t._v("想使用"),n("strong",[t._v("Foo")]),t._v("构造函数的方法，如果找不到可以去"),n("strong",[t._v("Foo")]),t._v("构造函数的prototype属性去找。\n"),n("strong",[t._v("Foo.prototype")]),t._v("是一个对象\n实例化对象"),n("strong",[t._v("fn")]),t._v("的_ _ proto_ "),n("em",[t._v("指向到构造函数"),n("strong",[t._v("Foo")]),t._v("的"),n("strong",[t._v("prototype")]),t._v("属性。即\n"),n("strong",[t._v("fn")]),t._v(".")]),t._v(" "),n("em",[t._v("proto")]),t._v(" _ "),n("strong",[t._v("===")]),t._v(" "),n("strong",[t._v("Foo.prototype")])]),t._v(" "),n("p",[n("strong",[t._v("Foo.prototype")]),t._v("是一个对象，那就证明它就是构造函数所生成的，这个构造函数就是"),n("strong",[t._v("Object()")])]),t._v(" "),n("p",[t._v("所以"),n("strong",[t._v("Foo.prototype")]),t._v("这个对象的__proto__就指向到它的构造函数"),n("strong",[t._v("Object.prototype")]),t._v("对象中")]),t._v(" "),n("p",[t._v("最后"),n("strong",[t._v("Object.prototype")]),t._v("这个对象的__proto__最终指向为"),n("strong",[t._v("null")])]),t._v(" "),n("p",[t._v("（*关于原型链中this的指向问题，谁调用它它就指向谁，如果找不到就延着原型去找，直到找到为止）")])])}),[],!1,null,null,null);s.default=r.exports}}]);